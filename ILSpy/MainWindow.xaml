<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="ICSharpCode.ILSpy.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:tv="clr-namespace:ICSharpCode.TreeView;assembly=ICSharpCode.TreeView"
    xmlns:local="clr-namespace:ICSharpCode.ILSpy" 
    xmlns:controls="clr-namespace:ICSharpCode.ILSpy.Controls"
    Title="ILSpy"
    MinWidth="250"
    MinHeight="200"
    UseLayoutRounding="True"
    TextOptions.TextFormattingMode="Display"
    FocusManager.FocusedElement="{Binding ElementName=treeView}"
    Background="{StaticResource windowBackground}">

    <Window.Resources>
        <Style x:Key="MetroMenuListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="itemBorder" BorderThickness="0 0 0 3" Margin="2 0" SnapsToDevicePixels="true" VerticalAlignment="Center">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="itemBorder" Value="{StaticResource UIEmphasisBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Window.CommandBindings>
        <CommandBinding
            Command="Open"
            Executed="OpenCommandExecuted" />
        <CommandBinding
            Command="Refresh"
            Executed="RefreshCommandExecuted" />
        <CommandBinding
            Command="Save"
            Executed="SaveCommandExecuted" />
        <CommandBinding
            Command="BrowseBack"
            CanExecute="BackCommandCanExecute"
            Executed="BackCommandExecuted" />
        <CommandBinding
            Command="BrowseForward"
            CanExecute="ForwardCommandCanExecute"
            Executed="ForwardCommandExecuted" />
        <CommandBinding
            Command="Search"
            Executed="SearchCommandExecuted" />
    </Window.CommandBindings>
    <DockPanel>

        <Grid DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition Height="5" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ListBox Grid.Row="1" Margin="0 0 25 0" x:Name="topLevelMenuItems" Background="Transparent" IsSynchronizedWithCurrentItem="True" HorizontalAlignment="Right" BorderThickness="0" KeyDown="MainMenuKeyDown" ItemContainerStyle="{StaticResource MetroMenuListBoxItem}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Button Click="TopLevelMenuItemClick" x:Name="commandButton" Style="{StaticResource SimpleButton}">
                            <Label FontSize="18" Content="{Binding Key}" Target="commandButton" Padding="1" FontFamily="Segoe UI" Style="{StaticResource MenuLabel}" />
                        </Button>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" IsItemsHost="True"  />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>

            <ListBox x:Name="secondaryMenuItems" Background="Transparent" FocusVisualStyle="{x:Null}" Grid.Row="2" Margin="0 0 25 0" ItemsSource="{Binding ElementName=topLevelMenuItems, Path=SelectedItem.Value}" IsSynchronizedWithCurrentItem="True" HorizontalAlignment="Right" BorderThickness="0" KeyDown="SecondaryMenuKeyDown" ItemContainerStyle="{StaticResource MetroMenuListBoxItem}" ScrollViewer.CanContentScroll="False">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Button Command="{Binding Value}" VerticalAlignment="Center" Style="{StaticResource SimpleButton}" x:Name="commandButton" Margin="0 100 0 0" Opacity="0">
                            <Label Name="itemLabel" FontSize="12" FontFamily="Segoe UI Semilight" Content="{Binding Key}" Target="commandButton" Style="{StaticResource MenuLabel}" Padding="1" />
                        </Button>
                        <DataTemplate.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="commandButton">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="commandButton" Storyboard.TargetProperty="Margin" From="0 100 0 0" To="0 0 0 0" Duration="0:0:0.500"/>
                                        <DoubleAnimation Storyboard.TargetName="commandButton" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Height="20" Orientation="Horizontal" IsItemsHost="True" ScrollViewer.CanContentScroll="False" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>

            <!-- ToolBar -->
            <StackPanel x:Name="toolBar" Orientation="Horizontal"
            Grid.Row="0" Grid.RowSpan="2" Margin="25 0 0 0">
                <CheckBox IsChecked="{Binding FilterSettings.ShowInternalApi}" ToolTip="Show internal types and members" VerticalAlignment="Center">
                    <Image Width="32" Height="32" Source="Images/Toolbar/Private_Internal.png" />
                </CheckBox>
                <Separator />
                <ComboBox Name="languageComboBox" DisplayMemberPath="Name" Width="100"
                      ItemsSource="{x:Static local:Languages.AllLanguages}"
                      SelectedItem="{Binding FilterSettings.Language}" VerticalAlignment="Center"/>
            </StackPanel>


        </Grid>
        
        
        
        <!-- Status bar -->
        <StatusBar x:Name="statusBar" DockPanel.Dock="Bottom" Height="26" Visibility="Collapsed">
            <StatusBarItem DockPanel.Dock="Right">
                <TextBlock VerticalAlignment="Center"
                           HorizontalAlignment="Right"				           
                           x:Name="StatusLabel"
                           ToolTip="Status"
                           Text="Stand by..."/>
            </StatusBarItem>
        </StatusBar>
        <!-- Main grid separating left pane (treeView) from main pane (textEditor) -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Name="leftColumn"
                    MinWidth="100"
                    Width="0.4*" />
                <ColumnDefinition
                    Width="3" />
                <ColumnDefinition
                    Name="rightColumn"
                    MinWidth="100"
                    Width="0.6*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="*" />
            </Grid.RowDefinitions>
            <!-- Left pane: Tree View of assemblies and classes -->
            <tv:SharpTreeView
                Name="treeView"
                SelectionChanged="TreeView_SelectionChanged"
                ShowRoot="False"
                AllowDropOrder="True"
                AllowDrop="True" Margin="25 0 25 25" Opacity="0.7" />
            <GridSplitter
                Grid.ZIndex="1"
                Grid.Column="1"
                Margin="-5,0"
                BorderThickness="5,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch"
                BorderBrush="Transparent" />
            <!-- Right pane: Text Editor -->
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0" Name="topPaneRow" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="0.7*" MinHeight="100" Name="textViewRow" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="0" Name="bottomPaneRow" />
                </Grid.RowDefinitions>
                <Border BorderBrush="Black" BorderThickness="1" Name="updateAvailablePanel" Visibility="Collapsed">
                    <DockPanel>
                        <Button DockPanel.Dock="Right" Click="updateAvailablePanelCloseButtonClick" MinWidth="0">X</Button>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="4,0" VerticalAlignment="Center">A new ILSpy version is available.</TextBlock>
                            <Button Click="downloadUpdateButtonClick">Download</Button>
                        </StackPanel>
                    </DockPanel>
                </Border>
                
                <controls:DockedPane x:Name="topPane" Grid.Row="1" Title="Top" Visibility="Collapsed" CloseButtonClicked="TopPane_CloseButtonClicked" />
                
                <GridSplitter
                    Grid.ZIndex="1"
                    Grid.Row="2"
                    Margin="0,-2,0,-5"
                    BorderThickness="0,2,0,5"
                    BorderBrush="Transparent"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Visibility="{Binding Visibility, ElementName=topPane}" />
                
                <!-- decompilerTextView is into the mainPane by code -->
                <ContentPresenter Name="mainPane" Margin="0 0 25 25" Grid.Row="3" Opacity="0.7"/>
                
                <GridSplitter
                    Grid.ZIndex="1"
                    Grid.Row="4"
                    Margin="0,-2,0,-5"
                    BorderThickness="0,2,0,5"
                    BorderBrush="Transparent"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Visibility="{Binding Visibility, ElementName=bottomPane}" />
                
                <controls:DockedPane x:Name="bottomPane" Grid.Row="5" Title="Bottom" Visibility="Collapsed" CloseButtonClicked="BottomPane_CloseButtonClicked" />
            </Grid>
        </Grid>
    </DockPanel>
</Window>